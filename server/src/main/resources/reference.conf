akka.http {
  routing {
    decode-max-bytes-per-chunk = 16m
  }
  server {
    pipelining-limit = 8
    request-timeout = 50 s
    idle-timeout = 600 s
    parsing {
      max-uri-length = 64k
    }
  }
  client {
    parsing {
      max-content-length = 64m
    }
  }
}

akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = DEBUG
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
}

akka.actor.deployment {
  /compilerRouter {
    router = smallest-mailbox-pool
    nr-of-instances = 4
  }
}

fiddle {
  interface = "0.0.0.0"
  interface = ${?SF_INTERFACE}
  port = 8080
  port = ${?SF_PORT}
  analyticsID = "UA-74405486-1"
  helpUrl = "https://github.com/ochrons/scala-js-fiddle/blob/embeddable/UsersGuide.md"

  clientFiles = ["/client-opt.js"]

  # External Scala libraries allowed for fiddles
  extLibs = [
    "org.scala-js %%% scalajs-dom % 0.9.0",
    "org.scala-js %%% scalajs-dom % 0.9.1",
    "com.lihaoyi %%% scalatags % 0.6.0",
    "org.scala-lang.modules %% scala-async % 0.9.5"
  ]

  # External JS files to add to the client (must be absolute URLs)
  # This can be used to provide extra JS libraries to the Fiddle
  extJS = ["https://ajax.googleapis.com/ajax/libs/jquery/2.2.2/jquery.min.js"]

  # External CSS files to add to the client (must be absolute URLs)
  # This can be used to provide custom CSS files without modifying the source
  extCSS = []

  libCache = "target/extlibs"

  baseEnv = """
import scalatags.JsDom.all._
import org.scalajs.dom
import fiddle.Fiddle, Fiddle.println
import scalajs.js
object ScalaFiddle extends js.JSApp {
  def main() = {
// $FiddleStart
// $FiddleEnd
  }
}
"""

  httpHeaders = {
  }
  corsOrigins = ["http://localhost:8080","http://localhost:9000","http://*.scalafiddle.io","https://*.scalafiddle.io"]
}

