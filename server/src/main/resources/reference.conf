akka.http {
  routing {
    decode-max-bytes-per-chunk = 16m
  }
  server {
    pipelining-limit = 8
    request-timeout = 50 s
    idle-timeout = 600 s
    parsing {
      max-uri-length = 64k
    }
  }
  client {
    parsing {
      max-content-length = 64m
    }
  }
  host-connection-pool {
    max-open-requests = 256
  }
}

akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = DEBUG
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
}

akka.actor.deployment {
  /compilerRouter {
    router = smallest-mailbox-pool
    nr-of-instances = 4
  }
}

fiddle {
  interface = "0.0.0.0"
  interface = ${?SCALAFIDDLE_INTERFACE}
  port = 8080
  port = ${?SCALAFIDDLE_PORT}
  analyticsID = "UA-74405486-2"
  analyticsID = ${?SCALAFIDDLE_ANALYTICS_ID}
  scalaFiddleSourceUrl = "http://localhost:9000/raw/"
  scalaFiddleSourceUrl = ${?SCALAFIDDLE_SOURCE_URL}

  helpUrl = "https://github.com/ochrons/scala-js-fiddle/blob/embeddable/UsersGuide.md"

  clientFiles = ["/client-opt.js"]

  # External Scala libraries allowed for fiddles
  extLibs = "/libraries.json"
  extLibs = ${?SCALAFIDDLE_LIBRARIES_URL}

  # External JS files to add to the client (must be absolute URLs)
  # This can be used to provide extra JS libraries to the Fiddle
  extJS = ["https://ajax.googleapis.com/ajax/libs/jquery/2.2.2/jquery.min.js"]

  # External CSS files to add to the client (must be absolute URLs)
  # This can be used to provide custom CSS files without modifying the source
  extCSS = []

  libCache = "target/extlibs"
  libCache = ${?SCALAFIDDLE_LIBCACHE}

  baseEnv = """import fiddle.Fiddle, Fiddle.println
import scalajs.js

@js.annotation.JSExport
object ScalaFiddle {
  // $FiddleStart

  // $FiddleEnd
}
"""

  httpHeaders = {
  }
  corsOrigins = ["http://localhost:8080","http://localhost:9000","http://scalafiddle.io","https://scalafiddle.io","http://beetta.scalafiddle.io","https://beetta.scalafiddle.io"]
}

